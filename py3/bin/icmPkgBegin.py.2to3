RefactoringTool: Skipping optional fixer: buffer
RefactoringTool: Skipping optional fixer: idioms
RefactoringTool: Skipping optional fixer: set_literal
RefactoringTool: Skipping optional fixer: ws_comma
RefactoringTool: Refactored ./icmExamples/py3/bin/icmPkgBegin.py
RefactoringTool: Files that were modified:
RefactoringTool: ./icmExamples/py3/bin/icmPkgBegin.py
--- ./icmExamples/py3/bin/icmPkgBegin.py	(original)
+++ ./icmExamples/py3/bin/icmPkgBegin.py	(refactored)
@@ -148,7 +148,7 @@
         if actions[0] == "all":
             actions = ['moduleDescription', 'moduleUsage', 'moduleStatus']
         for each in actions:
-            print each
+            print(each)
             if interactive:
                 #print( str( __doc__ ) )  # This is the Summary: from the top doc-string
                 #version(interactive=True)
@@ -394,20 +394,20 @@
         myName=self.myName()
         thisOutcome = icm.OpOutcome(invokerName=myName)
 
-        print G.icmInfo
+        print(G.icmInfo)
 
         for eachArg in effectiveArgsList:
             icm.ANN_here("{}".format(eachArg))
 
-        print (icm.__file__)
-        print sys.path
+        print((icm.__file__))
+        print(sys.path)
 
         import imp
-        print(imp.find_module('unisos/icm'))
+        print((imp.find_module('unisos/icm')))
 
         @ucf.runOnceOnly
         def echo(str):
-            print str
+            print(str)
             
         echo("first")
         echo("second")  # Should not run
